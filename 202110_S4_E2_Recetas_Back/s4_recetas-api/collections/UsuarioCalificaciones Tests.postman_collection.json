{
	"info": {
		"_postman_id": "335a483e-463d-4650-9d0d-8670088c682c",
		"name": "UsuarioCalificaciones Tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Crear un nuevo usuario",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = JSON.parse(responseBody);\r",
							"postman.setGlobalVariable(\"new_id_u\",data.id);\r",
							"tests[\"No genera error en el Post\"] = responseCode.code === 200;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"nombre\":\"Ingrith\",\r\n\"login\": \"login\",\r\n\"correo\":\"correo\",\r\n\"contrasenia\":\"contrasenia\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s4_recetas-api/api/usuarios",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s4_recetas-api",
						"api",
						"usuarios"
					]
				}
			},
			"response": []
		},
		{
			"name": "Crearle una nueva calificacion a un usuario",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = JSON.parse(responseBody);\r",
							"postman.setGlobalVariable(\"new_id_ca\",data.id);\r",
							"tests[\"No genera error en el Post\"] = responseCode.code === 200;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"calificador\": \"Pepito Perez\",\r\n    \"puntos\": 4.0\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s4_recetas-api/api/usuarios/{{new_id_u}}/calificaciones",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s4_recetas-api",
						"api",
						"usuarios",
						"{{new_id_u}}",
						"calificaciones"
					]
				}
			},
			"response": []
		},
		{
			"name": "Crear una nueva calificacion con puntaje incorrecto",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"Identifica error en el Post\"] = responseCode.code === 412;\r",
							"tests[\"Identifica error en el Post\"] = responseBody.has(\"La calificación debe estar entre 1.0 y 5.0\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"calificador\": \"Pepa perez\",\r\n    \"puntos\": 6.5\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s4_recetas-api/api/usuarios/{{new_id_u}}/calificaciones",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s4_recetas-api",
						"api",
						"usuarios",
						"{{new_id_u}}",
						"calificaciones"
					]
				}
			},
			"response": []
		},
		{
			"name": "Crearle una nueva calificacion a un usuario que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"No se puede asociar una calificacion a un usuario que no existe.\"] = responseCode.code === 404;\r",
							"tests[\"Mensaje correcto de error\"] = responseBody.has(\"El recurso /usuarios/0 no existe\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"calificador\": \"Pepa perez X\",\r\n    \"puntos\": 2.0\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s4_recetas-api/api/usuarios/0/calificaciones",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s4_recetas-api",
						"api",
						"usuarios",
						"0",
						"calificaciones"
					]
				}
			},
			"response": []
		},
		{
			"name": "Editar una nueva calificacion de un usuario",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"console.log(responseBody);",
							"var data = JSON.parse(responseBody);",
							"tests[\"No genera error en el Put\"] = responseCode.code === 200;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"calificador\": \"Juanito\",\n    \"puntos\": 3.5\n}"
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s4_recetas-api/api/usuarios/{{new_id_u}}/calificaciones/{{new_id_ca}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s4_recetas-api",
						"api",
						"usuarios",
						"{{new_id_u}}",
						"calificaciones",
						"{{new_id_ca}}"
					]
				},
				"description": "**Release: Paso-2**\r\n\r\nActualiza una editorial existente. El recurso solo tiene de atributo \"name\" que debe ser único. se envía el Id de la URL de la petición.\r\n\r\n**Código http esperado: 200**"
			},
			"response": []
		},
		{
			"name": "Editar una nueva calificacion con puntaje incorrecto",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"Identifica error en el Post\"] = responseCode.code === 412;\r",
							"tests[\"Identifica error en el Post\"] = responseBody.has(\"La calificación debe estar entre 1.0 y 5.0\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"calificador\": \"Juanito\",\r\n    \"puntos\": 6.5\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s4_recetas-api/api/usuarios/{{new_id_u}}/calificaciones/{{new_id_ca}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s4_recetas-api",
						"api",
						"usuarios",
						"{{new_id_u}}",
						"calificaciones",
						"{{new_id_ca}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Editar una nueva calificacion que no existe a un usuario",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"No se puede editar una calificacion que no existe.\"] = responseCode.code === 404;",
							"let id = pm.variables.get(\"new_id_u\");",
							"tests[\"Mensaje correcto de error\"] = responseBody.has(\"El recurso /usuarios/\"+id+\"/calificaciones/0 no existe.\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"calificador\": \"Juanito\",\n    \"puntos\": 3.5\n}"
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s4_recetas-api/api/usuarios/{{new_id_u}}/calificaciones/0",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s4_recetas-api",
						"api",
						"usuarios",
						"{{new_id_u}}",
						"calificaciones",
						"0"
					]
				},
				"description": "**Release: Paso-2**\r\nActualiza una editorial que no existe. \r\n\r\nPara la prueba se verifica que se genera el error y el mensaje \"El recurso /editorials/0 no existe.\".\r\n\r\n**Código HTTP esperado: 404**"
			},
			"response": []
		},
		{
			"name": "Editar una nueva calificacion de un usuario que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"No se puede editar una calificacion sobre un usuario que no existe.\"] = responseCode.code === 404;",
							"tests[\"Mensaje correcto de error\"] = responseBody.has(\"El recurso /usuarios/0 no existe.\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"calificador\": \"Juanito\",\n    \"puntos\": 3.5\n}"
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s4_recetas-api/api/usuarios/0/calificaciones/{{new_id_ca}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s4_recetas-api",
						"api",
						"usuarios",
						"0",
						"calificaciones",
						"{{new_id_ca}}"
					]
				},
				"description": "**Release: Paso-2**\r\nActualiza una editorial que no existe. \r\n\r\nPara la prueba se verifica que se genera el error y el mensaje \"El recurso /editorials/0 no existe.\".\r\n\r\n**Código HTTP esperado: 404**"
			},
			"response": []
		},
		{
			"name": "Obtener todas las calificaciones de un usuario",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = JSON.parse(responseBody);\r",
							"tests[\"No genera error en el Get All\"] = responseCode.code === 200;\r",
							"tests[\"No trae una lista vacía\"] = data.length>=1;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s4_recetas-api/api/usuarios/{{new_id_u}}/calificaciones",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s4_recetas-api",
						"api",
						"usuarios",
						"{{new_id_u}}",
						"calificaciones"
					]
				}
			},
			"response": []
		},
		{
			"name": "Obtener una calificacion de un usuario",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"console.log(responseBody);\r",
							"var data = JSON.parse(responseBody);\r",
							"tests[\"No genera error en el Get\"] = responseCode.code === 200;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s4_recetas-api/api/usuarios/{{new_id_u}}/calificaciones/{{new_id_ca}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s4_recetas-api",
						"api",
						"usuarios",
						"{{new_id_u}}",
						"calificaciones",
						"{{new_id_ca}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Obtener una calificacion que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"No consulta con id que no existe\"] = responseCode.code === 404;\r",
							"let id = pm.variables.get(\"new_id_u\");\r",
							"tests[\"Mensaje correcto de error\"] = responseBody.has(\"El recurso /usuarios/\"+id+\"/calificaciones/0 no existe.\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s4_recetas-api/api/usuarios/{{new_id_u}}/calificaciones/0",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s4_recetas-api",
						"api",
						"usuarios",
						"{{new_id_u}}",
						"calificaciones",
						"0"
					]
				}
			},
			"response": []
		},
		{
			"name": "Obtener una calificacion de un usuario que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"No consulta con usuario que no existe\"] = responseCode.code === 404;\r",
							"tests[\"Mensaje correcto de error\"] = responseBody.has(\"El recurso /usuarios/0 no existe.\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s4_recetas-api/api/usuarios/0/calificaciones/{{new_id_ca}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s4_recetas-api",
						"api",
						"usuarios",
						"0",
						"calificaciones",
						"{{new_id_ca}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Borrar una calificacion que no existe a un usuario",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"No se puede borrar una calificacion que no existe.\"] = responseCode.code === 404;\r",
							"let id = pm.variables.get(\"new_id_u\");\r",
							"tests[\"Mensaje correcto de error\"] = responseBody.has(\"El recurso /usuarios/\"+id+\"/calificaciones/0 no existe.\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s4_recetas-api/api/usuarios/{{new_id_u}}/calificaciones/0",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s4_recetas-api",
						"api",
						"usuarios",
						"{{new_id_u}}",
						"calificaciones",
						"0"
					]
				},
				"description": "**Release: Paso-1**\n\nBorra una editorial, se envía el id de la editorial creada en la primera petición\n\n**Código HTTP esperado: 204**"
			},
			"response": []
		},
		{
			"name": "Borrar una calificacion de un usuario que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"No se puede borrar una calificaciones sobre un usuario que no existe.\"] = responseCode.code === 404;\r",
							"tests[\"Mensaje correcto de error\"] = responseBody.has(\"El recurso /usuarios/0 no existe.\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s4_recetas-api/api/usuarios/0/calificaciones/{{new_id_ca}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s4_recetas-api",
						"api",
						"usuarios",
						"0",
						"calificaciones",
						"{{new_id_ca}}"
					]
				},
				"description": "**Release: Paso-1**\n\nBorra una editorial, se envía el id de la editorial creada en la primera petición\n\n**Código HTTP esperado: 204**"
			},
			"response": []
		},
		{
			"name": "Borrar una calificacion",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"No genera error en el Delete\"] = responseCode.code === 204;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s4_recetas-api/api/usuarios/{{new_id_u}}/calificaciones/{{new_id_ca}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s4_recetas-api",
						"api",
						"usuarios",
						"{{new_id_u}}",
						"calificaciones",
						"{{new_id_ca}}"
					]
				},
				"description": "**Release: Paso-1**\n\nBorra una editorial, se envía el id de la editorial creada en la primera petición\n\n**Código HTTP esperado: 204**"
			},
			"response": []
		},
		{
			"name": "Borrar un usuario",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"No genera error en el Delete\"] = responseCode.code === 204;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s4_recetas-api/api/usuarios/{{new_id_u}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s4_recetas-api",
						"api",
						"usuarios",
						"{{new_id_u}}"
					]
				},
				"description": "**Release: Paso-1**\n\nBorra una editorial, se envía el id de la editorial creada en la primera petición\n\n**Código HTTP esperado: 204**"
			},
			"response": []
		}
	]
}